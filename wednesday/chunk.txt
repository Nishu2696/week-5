/*let output=(arr1, num) => {
    let out=new Array;
    let num1=num;
    let result=[];
    for(let i=0;i<arr1.length;i++){
        if(((i % num1) === 0) && (i !== 0)){
            out.push(result);
            result=[];
        }
        result.push(arr1[i]);
        //console.log(result);
    }
    out.push(result);
    //out.shift();
    console.log(out);
};

output(arr,value);*/

using spread operator

function chunk(arr1, num){
    let out:Number[];
    let arr2=arr1;
    console.log(arr2.length);
    let num1=num;
    let result:Number[];
    for(let i=0;i<arr2.length;i++){
        if(((i % num1) === 0) && (i !== 0)){
            out=[out, [...result]];
            result=[];
        }
        result.push(arr2[i]);
        //console.log(result);
    }
    out=[out, [...result]];
    //out.shift();
    console.log(out);
};

(or)

function chunk(arr1, num){
    let out=[];
    console.log(out);
    let arr2=arr1;
    console.log(arr2.length);
    let num1=num;
    let result=[];
    console.log(result);
    for(let i=0;i<arr2.length;i++){
        if(((i % num1) === 0) && (i !== 0)){
            out=[out, [...result]];
            result=[];
        }
        result.push(arr2[i]);
        //console.log(result);
    }
    out=[out, [...result]];
    //out.shift();
    console.log(out);
};

chunk(array,val);

chunk(array,val);